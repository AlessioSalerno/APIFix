Configuration: 
---- UseAdditionalOutput: True
---- UseAdditionalInput : False
---- OnlyNewUsage       : False
---- GivenExample       : 1
---- UseTypedUsage      : False
---- NewKeyWords        : 
---- OldKeyWords        : 
---- OldUsageThreashold : 0.15
---- NewUsageThreashold : 0.25
---- Validate           : True
load 1 relevant edits!
load 75 new relevant usages
loading D:\workspace\breaking-changes\benchmark\MimeKit\MimeKit_1.22.0_2.0.0\clients\ImapDownloader
loading D:\workspace\breaking-changes\benchmark\MimeKit\MimeKit_1.22.0_2.0.0\clients\MailKitClient
loading D:\workspace\breaking-changes\benchmark\MimeKit\MimeKit_1.22.0_2.0.0\clients\ONLYOFFICE-CommunityServer
loading D:\workspace\breaking-changes\benchmark\MimeKit\MimeKit_1.22.0_2.0.0\clients\snvrepos
loading D:\workspace\breaking-changes\benchmark\MimeKit\MimeKit_1.22.0_2.0.0\clients\test
load 5 relevant client edits!
Log: invoke synthesis engine...
Log: the size of unRolledEdits is: 2
size of new usage: 75
Log: add new usage attachment.Content.DecodeTo(memory);
Log: add new usage attachment.Content.DecodeTo(memory)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage attachment.Content.DecodeTo(stream, cancel.Token);
Log: add new usage attachment.Content.DecodeTo(stream, cancel.Token)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage attachment.Content.DecodeTo(stream, cancel.Token);
Log: add new usage attachment.Content.DecodeTo(stream, cancel.Token)
Log: add new usage part.Content.DecodeTo(ms);
Log: add new usage part.Content.DecodeTo(ms)
Log: add new usage part.Content.DecodeTo(ms);
Log: add new usage part.Content.DecodeTo(ms)
Log: add new usage image.Content.DecodeTo(output);
Log: add new usage image.Content.DecodeTo(output)
Log: add new usage part.Content.DecodeTo(attachmentStream);
Log: add new usage part.Content.DecodeTo(attachmentStream)
Log: add new usage attachment.Content.DecodeTo(stream, cancel.Token);
Log: add new usage attachment.Content.DecodeTo(stream, cancel.Token)
Log: add new usage part.Content.DecodeTo(stream, cancellationToken);
Log: add new usage part.Content.DecodeTo(stream, cancellationToken)
Log: add new usage attachment.Content.DecodeTo(stream, cancel.Token);
Log: add new usage attachment.Content.DecodeTo(stream, cancel.Token)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(fs);
Log: add new usage part.Content.DecodeTo(fs)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage image.Content.DecodeTo(output);
Log: add new usage image.Content.DecodeTo(output)
Log: add new usage ((MimePart) attachment).Content.DecodeTo(memory);
Log: add new usage ((MimePart) attachment).Content.DecodeTo(memory)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage mimePart.Content.DecodeTo(memoryStream);
Log: add new usage mimePart.Content.DecodeTo(memoryStream)
Log: add new usage attachment.Content.DecodeTo(stream, cancel.Token);
Log: add new usage attachment.Content.DecodeTo(stream, cancel.Token)
Log: add new usage part.Content.DecodeTo(fs);
Log: add new usage part.Content.DecodeTo(fs)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage mp.Content.DecodeTo(stream);
Log: add new usage mp.Content.DecodeTo(stream)
Log: add new usage mp.Content.DecodeTo(stream);
Log: add new usage mp.Content.DecodeTo(stream)
Log: add new usage mp.Content.DecodeTo(stream);
Log: add new usage mp.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage mimePart.Content.DecodeTo(memoryStream);
Log: add new usage mimePart.Content.DecodeTo(memoryStream)
Log: add new usage attachment.Content.DecodeTo(stream);
Log: add new usage attachment.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage image.Content.DecodeTo(output);
Log: add new usage image.Content.DecodeTo(output)
Log: add new usage content.DecodeTo(memory);
Log: add new usage content.DecodeTo(memory)
Log: add new usage attachment.Content.DecodeTo(memory);
Log: add new usage attachment.Content.DecodeTo(memory)
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(stream, cancel.Token);
Log: add new usage attachment.Content.DecodeTo(stream, cancel.Token)
Log: add new usage mp.Content.DecodeTo(output);
Log: add new usage mp.Content.DecodeTo(output)
Log: add new usage (mime as MimePart).Content.DecodeTo(output);
Log: add new usage (mime as MimePart).Content.DecodeTo(output)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage attachmentPart.Content.DecodeTo(memoryAttachment);
Log: add new usage attachmentPart.Content.DecodeTo(memoryAttachment)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage mimePart.Content.DecodeTo(memoryStream);
Log: add new usage mimePart.Content.DecodeTo(memoryStream)
Log: add new usage mimePart.Content.DecodeTo(stream);
Log: add new usage mimePart.Content.DecodeTo(stream)
Log: add new usage attachment.Content.DecodeTo(stream);
Log: add new usage attachment.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(content);
Log: add new usage part.Content.DecodeTo(content);
Log: add new usage part.Content.DecodeTo(content)
Log: add new usage part.Content.DecodeTo(content)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage message.Content.DecodeTo(file.Content);
Log: add new usage message.Content.DecodeTo(file.Content)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage image.Content.DecodeTo(output);
Log: add new usage image.Content.DecodeTo(output)
Log: add new usage attachment.Content.DecodeTo(stream);
Log: add new usage attachment.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add new usage image.Content.DecodeTo(output);
Log: add new usage image.Content.DecodeTo(output)
Log: add new usage content.DecodeTo(memory);
Log: add new usage content.DecodeTo(memory)
Log: add new usage attachment.Content.DecodeTo(memory);
Log: add new usage attachment.Content.DecodeTo(memory)
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg);
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage attachment.Content.DecodeTo(jpeg)
Log: add new usage part.ContentObject.DecodeTo(stream);
Log: add new usage part.ContentObject.DecodeTo(stream)
Log: add new usage part.ContentObject.DecodeTo(stream);
Log: add new usage part.ContentObject.DecodeTo(stream)
Log: add new usage mime.Content.DecodeTo(stream);
Log: add new usage mime.Content.DecodeTo(stream)
Log: add new usage mime.Content.DecodeTo(stream);
Log: add new usage mime.Content.DecodeTo(stream)
Log: add new usage part.Content.DecodeTo(attachmentStream);
Log: add new usage part.Content.DecodeTo(attachmentStream)
Log: add new usage part.Content.DecodeTo(stream);
Log: add new usage part.Content.DecodeTo(stream)
Log: add old usage attachment.ContentObject.DecodeTo(memory);
Log: add old usage attachment.ContentObject.DecodeTo(memory)
Log: add old usage p.ContentObject.DecodeTo(stream);
Log: add old usage p.ContentObject.DecodeTo(stream)
Log: add old usage mimePart.ContentObject.DecodeTo(mailAttach.dataStream);
Log: add old usage mimePart.ContentObject.DecodeTo(mailAttach.dataStream)
Log: add old usage textPart.ContentObject.DecodeTo(stream);
Log: add old usage textPart.ContentObject.DecodeTo(stream)
Log: add old usage attachment.ContentObject.DecodeTo(memory);
Log: add old usage attachment.ContentObject.DecodeTo(memory)
Log: ============== Cluster start ==============
- ContentObject.DecodeTo (filtered, cancellationToken);
----------------
+ Content.DecodeTo (filtered, cancellationToken);

new usages: attachment.Content.DecodeTo(memory);
new usages: part.Content.DecodeTo(stream);
new usages: attachment.Content.DecodeTo(stream, cancel.Token);
new usages: part.Content.DecodeTo(ms);
new usages: image.Content.DecodeTo(output);
new usages: part.Content.DecodeTo(attachmentStream);
new usages: part.Content.DecodeTo(stream, cancellationToken);
new usages: part.Content.DecodeTo(fs);
new usages: ((MimePart) attachment).Content.DecodeTo(memory);
new usages: mimePart.Content.DecodeTo(memoryStream);
new usages: mp.Content.DecodeTo(stream);
new usages: attachment.Content.DecodeTo(stream);
new usages: content.DecodeTo(memory);
new usages: attachment.Content.DecodeTo(jpeg);
new usages: mp.Content.DecodeTo(output);
new usages: (mime as MimePart).Content.DecodeTo(output);
new usages: attachmentPart.Content.DecodeTo(memoryAttachment);
new usages: mimePart.Content.DecodeTo(stream);
new usages: part.Content.DecodeTo(content);
new usages: message.Content.DecodeTo(file.Content);
new usages: part.ContentObject.DecodeTo(stream);
new usages: mime.Content.DecodeTo(stream);
old usages: attachment.ContentObject.DecodeTo(memory);
old usages: p.ContentObject.DecodeTo(stream);
old usages: mimePart.ContentObject.DecodeTo(mailAttach.dataStream);
old usages: textPart.ContentObject.DecodeTo(stream);
old usages: attachment.ContentObject.DecodeTo(memory);
============= Cluster end ==============

Log: generalized output is: Content.DecodeTo(filtered, cancellationToken);
Interesting new usage: attachment.Content.DecodeTo(memory);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (memory):ArgumentList
Log: Subsititution: Content:IdentifierName -> attachment.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(memory);
Interesting new usage: part.Content.DecodeTo(stream);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream);
Interesting new usage: attachment.Content.DecodeTo(stream, cancel.Token);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream, cancel.Token):ArgumentList
Log: Subsititution: Content:IdentifierName -> attachment.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream, cancel.Token);
Interesting new usage: part.Content.DecodeTo(ms);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (ms):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(ms);
Interesting new usage: image.Content.DecodeTo(output);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (output):ArgumentList
Log: Subsititution: Content:IdentifierName -> image.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(output);
Interesting new usage: part.Content.DecodeTo(attachmentStream);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (attachmentStream):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(attachmentStream);
Interesting new usage: part.Content.DecodeTo(stream, cancellationToken);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream, cancellationToken):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream, cancellationToken);
Interesting new usage: part.Content.DecodeTo(fs);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (fs):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(fs);
Interesting new usage: ((MimePart) attachment).Content.DecodeTo(memory);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (memory):ArgumentList
Log: Subsititution: Content:IdentifierName -> ((MimePart) attachment).Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(memory);
Interesting new usage: mimePart.Content.DecodeTo(memoryStream);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (memoryStream):ArgumentList
Log: Subsititution: Content:IdentifierName -> mimePart.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(memoryStream);
Interesting new usage: mp.Content.DecodeTo(stream);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream):ArgumentList
Log: Subsititution: Content:IdentifierName -> mp.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream);
Interesting new usage: attachment.Content.DecodeTo(stream);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream):ArgumentList
Log: Subsititution: Content:IdentifierName -> attachment.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream);
Interesting new usage: content.DecodeTo(memory);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (memory):ArgumentList
Log: Subsititution: Content:IdentifierToken -> content:IdentifierToken
Correponding input: ContentObject.DecodeTo(memory);
Interesting new usage: attachment.Content.DecodeTo(jpeg);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (jpeg):ArgumentList
Log: Subsititution: Content:IdentifierName -> attachment.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(jpeg);
Interesting new usage: mp.Content.DecodeTo(output);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (output):ArgumentList
Log: Subsititution: Content:IdentifierName -> mp.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(output);
Interesting new usage: (mime as MimePart).Content.DecodeTo(output);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (output):ArgumentList
Log: Subsititution: Content:IdentifierName -> (mime as MimePart).Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(output);
Interesting new usage: attachmentPart.Content.DecodeTo(memoryAttachment);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (memoryAttachment):ArgumentList
Log: Subsititution: Content:IdentifierName -> attachmentPart.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(memoryAttachment);
Interesting new usage: mimePart.Content.DecodeTo(stream);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream):ArgumentList
Log: Subsititution: Content:IdentifierName -> mimePart.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream);
Interesting new usage: part.Content.DecodeTo(content);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (content):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(content);
Interesting new usage: message.Content.DecodeTo(file.Content);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (file.Content):ArgumentList
Log: Subsititution: Content:IdentifierName -> message.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(file.Content);
Interesting new usage: part.ContentObject.DecodeTo(stream);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.ContentObject:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream);
Interesting new usage: mime.Content.DecodeTo(stream);
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream):ArgumentList
Log: Subsititution: Content:IdentifierName -> mime.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream);
Log: Input to synthesize the program:
Log: ContentObject.DecodeTo(memory);
Log: ---------------------
Log: attachment.Content.DecodeTo(memory);
Log: ContentObject.DecodeTo(stream);
Log: ---------------------
Log: part.Content.DecodeTo(stream);
Log: ContentObject.DecodeTo(stream, cancel.Token);
Log: ---------------------
Log: attachment.Content.DecodeTo(stream, cancel.Token);
Log: ContentObject.DecodeTo(ms);
Log: ---------------------
Log: part.Content.DecodeTo(ms);
Log: ContentObject.DecodeTo(output);
Log: ---------------------
Log: image.Content.DecodeTo(output);
Log: ContentObject.DecodeTo(attachmentStream);
Log: ---------------------
Log: part.Content.DecodeTo(attachmentStream);
Log: ContentObject.DecodeTo(stream, cancellationToken);
Log: ---------------------
Log: part.Content.DecodeTo(stream, cancellationToken);
Log: ContentObject.DecodeTo(fs);
Log: ---------------------
Log: part.Content.DecodeTo(fs);
Log: ContentObject.DecodeTo(memoryStream);
Log: ---------------------
Log: mimePart.Content.DecodeTo(memoryStream);
Log: ContentObject.DecodeTo(jpeg);
Log: ---------------------
Log: attachment.Content.DecodeTo(jpeg);
Log: old usage is attachment.ContentObject.DecodeTo(memory);
Log: predict is null
Log: old usage is p.ContentObject.DecodeTo(stream);
Log: predict is null
Log: old usage is mimePart.ContentObject.DecodeTo(mailAttach.dataStream);
Log: predict is null
Log: old usage is textPart.ContentObject.DecodeTo(stream);
Log: predict is null
Log: old usage is attachment.ContentObject.DecodeTo(memory);
Log: predict is null
Log: ============== Cluster start ==============
ContentObject.DecodeTo(filtered, cancellationToken)
----------------
Content.DecodeTo(filtered, cancellationToken)

new usages: attachment.Content.DecodeTo(memory)
new usages: part.Content.DecodeTo(stream)
new usages: attachment.Content.DecodeTo(stream, cancel.Token)
new usages: part.Content.DecodeTo(ms)
new usages: image.Content.DecodeTo(output)
new usages: part.Content.DecodeTo(attachmentStream)
new usages: part.Content.DecodeTo(stream, cancellationToken)
new usages: part.Content.DecodeTo(fs)
new usages: ((MimePart) attachment).Content.DecodeTo(memory)
new usages: mimePart.Content.DecodeTo(memoryStream)
new usages: mp.Content.DecodeTo(stream)
new usages: attachment.Content.DecodeTo(stream)
new usages: content.DecodeTo(memory)
new usages: attachment.Content.DecodeTo(jpeg)
new usages: mp.Content.DecodeTo(output)
new usages: (mime as MimePart).Content.DecodeTo(output)
new usages: attachmentPart.Content.DecodeTo(memoryAttachment)
new usages: mimePart.Content.DecodeTo(stream)
new usages: part.Content.DecodeTo(content)
new usages: message.Content.DecodeTo(file.Content)
new usages: part.ContentObject.DecodeTo(stream)
new usages: mime.Content.DecodeTo(stream)
old usages: attachment.ContentObject.DecodeTo(memory)
old usages: p.ContentObject.DecodeTo(stream)
old usages: mimePart.ContentObject.DecodeTo(mailAttach.dataStream)
old usages: textPart.ContentObject.DecodeTo(stream)
old usages: attachment.ContentObject.DecodeTo(memory)
============= Cluster end ==============

Log: generalized output is: Content.DecodeTo(filtered, cancellationToken)
Interesting new usage: attachment.Content.DecodeTo(memory)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (memory):ArgumentList
Log: Subsititution: Content:IdentifierName -> attachment.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(memory)
Interesting new usage: part.Content.DecodeTo(stream)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream)
Interesting new usage: attachment.Content.DecodeTo(stream, cancel.Token)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream, cancel.Token):ArgumentList
Log: Subsititution: Content:IdentifierName -> attachment.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream, cancel.Token)
Interesting new usage: part.Content.DecodeTo(ms)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (ms):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(ms)
Interesting new usage: image.Content.DecodeTo(output)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (output):ArgumentList
Log: Subsititution: Content:IdentifierName -> image.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(output)
Interesting new usage: part.Content.DecodeTo(attachmentStream)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (attachmentStream):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(attachmentStream)
Interesting new usage: part.Content.DecodeTo(stream, cancellationToken)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream, cancellationToken):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream, cancellationToken)
Interesting new usage: part.Content.DecodeTo(fs)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (fs):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(fs)
Interesting new usage: ((MimePart) attachment).Content.DecodeTo(memory)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (memory):ArgumentList
Log: Subsititution: Content:IdentifierName -> ((MimePart) attachment).Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(memory)
Interesting new usage: mimePart.Content.DecodeTo(memoryStream)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (memoryStream):ArgumentList
Log: Subsititution: Content:IdentifierName -> mimePart.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(memoryStream)
Interesting new usage: mp.Content.DecodeTo(stream)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream):ArgumentList
Log: Subsititution: Content:IdentifierName -> mp.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream)
Interesting new usage: attachment.Content.DecodeTo(stream)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream):ArgumentList
Log: Subsititution: Content:IdentifierName -> attachment.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream)
Interesting new usage: content.DecodeTo(memory)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (memory):ArgumentList
Log: Subsititution: Content:IdentifierToken -> content:IdentifierToken
Correponding input: ContentObject.DecodeTo(memory)
Interesting new usage: attachment.Content.DecodeTo(jpeg)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (jpeg):ArgumentList
Log: Subsititution: Content:IdentifierName -> attachment.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(jpeg)
Interesting new usage: mp.Content.DecodeTo(output)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (output):ArgumentList
Log: Subsititution: Content:IdentifierName -> mp.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(output)
Interesting new usage: (mime as MimePart).Content.DecodeTo(output)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (output):ArgumentList
Log: Subsititution: Content:IdentifierName -> (mime as MimePart).Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(output)
Interesting new usage: attachmentPart.Content.DecodeTo(memoryAttachment)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (memoryAttachment):ArgumentList
Log: Subsititution: Content:IdentifierName -> attachmentPart.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(memoryAttachment)
Interesting new usage: mimePart.Content.DecodeTo(stream)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream):ArgumentList
Log: Subsititution: Content:IdentifierName -> mimePart.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream)
Interesting new usage: part.Content.DecodeTo(content)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (content):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(content)
Interesting new usage: message.Content.DecodeTo(file.Content)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (file.Content):ArgumentList
Log: Subsititution: Content:IdentifierName -> message.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(file.Content)
Interesting new usage: part.ContentObject.DecodeTo(stream)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream):ArgumentList
Log: Subsititution: Content:IdentifierName -> part.ContentObject:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream)
Interesting new usage: mime.Content.DecodeTo(stream)
Log: Subsititution: (filtered, cancellationToken):ArgumentList -> (stream):ArgumentList
Log: Subsititution: Content:IdentifierName -> mime.Content:SimpleMemberAccessExpression
Correponding input: ContentObject.DecodeTo(stream)
Log: Input to synthesize the program:
Log: ContentObject.DecodeTo(memory)
Log: ---------------------
Log: attachment.Content.DecodeTo(memory)
Log: ContentObject.DecodeTo(stream)
Log: ---------------------
Log: part.Content.DecodeTo(stream)
Log: ContentObject.DecodeTo(stream, cancel.Token)
Log: ---------------------
Log: attachment.Content.DecodeTo(stream, cancel.Token)
Log: ContentObject.DecodeTo(ms)
Log: ---------------------
Log: part.Content.DecodeTo(ms)
Log: ContentObject.DecodeTo(output)
Log: ---------------------
Log: image.Content.DecodeTo(output)
Log: ContentObject.DecodeTo(attachmentStream)
Log: ---------------------
Log: part.Content.DecodeTo(attachmentStream)
Log: ContentObject.DecodeTo(stream, cancellationToken)
Log: ---------------------
Log: part.Content.DecodeTo(stream, cancellationToken)
Log: ContentObject.DecodeTo(fs)
Log: ---------------------
Log: part.Content.DecodeTo(fs)
Log: ContentObject.DecodeTo(memoryStream)
Log: ---------------------
Log: mimePart.Content.DecodeTo(memoryStream)
Log: ContentObject.DecodeTo(jpeg)
Log: ---------------------
Log: attachment.Content.DecodeTo(jpeg)
Log: old usage is attachment.ContentObject.DecodeTo(memory)
Log: predict is null
Log: old usage is p.ContentObject.DecodeTo(stream)
Log: predict is null
Log: old usage is mimePart.ContentObject.DecodeTo(mailAttach.dataStream)
Log: predict is null
Log: old usage is textPart.ContentObject.DecodeTo(stream)
Log: predict is null
Log: old usage is attachment.ContentObject.DecodeTo(memory)
Log: predict is null
total correct cases : 0 totalTestCases 0 Successful rate is 0
The successful rate for transforming old usages: 0 / 5
