Configuration: 
---- UseAdditionalOutput: True
---- UseAdditionalInput : False
---- OnlyNewUsage       : False
---- GivenExample       : 1
---- UseTypedUsage      : False
---- NewKeyWords        : ValidationContext
---- OldKeyWords        : 
---- OldUsageThreashold : 0.3
---- NewUsageThreashold : 0.25
---- Validate           : True
load 9 relevant edits!
load 1000 new relevant usages
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\AdaskoTheBeAsT.FluentValidation.MediatR
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\Blazor-Architecture
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\blazor-validation
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\BlazorCrud
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\CleanArchFinal
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\CleanArchitecture
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\CqApi
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\DigitalLibrary
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\dotnet-templates
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\EfFluentValidation
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\fake-survey-generator
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\FluentValidation
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\FluentValidation-LegacyWeb
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\FluentValidation.Reactive
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\FluentValidationLister
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\NetCoreEventSourceSample
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\NetCoreMicroservicesSample
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\nswag-fluentvalidation
loading D:\workspace\breaking-changes\benchmark\FluentValidation\FluentValidation_8.0.0_9.0.0\clients\raBudget-api
load 6 relevant client edits!
Log: invoke synthesis engine...
Log: the size of unRolledEdits is: 17
size of new usage: 1000
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage validator.Validate(new ValidationContext < T >(model))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validatable.Validate(new ValidationContext(validatingObject))
Log: add new usage validator.Validate(new ValidationContext < object >(model))
Log: add new usage validator.Validate(new ValidationContext < object >(model))
Log: add new usage validator.Validate(new ValidationContext < object >(model))
Log: add new usage validator.Validate(new ValidationContext < object >(model))
Log: add new usage validator.Validate(new ValidationContext < object >(model))
Log: add new usage validator.Validate(new ValidationContext < object >(model))
Log: add new usage validator.Validate(new ValidationContext < object >(model))
Log: add new usage .Validate(new ValidationContext < IEvent >(@event))
Log: add new usage .Validate(new ValidationContext < TRequest >(request))
Log: add new usage .Validate(new ValidationContext < TRequest >(request))
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage var result = validator.Validate(new ValidationContext(model));
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage var result = validator.Validate(new ValidationContext(model));
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage var result = validator.Validate(new ValidationContext(model));
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage validator.Validate(new ValidationContext(model))
Log: add old usage .Validate(request)
Log: add old usage var result = validator ?.Validate(request);
Log: add old usage .Validate(request)
Log: add old usage var result = validator ?.Validate(request);
Log: add old usage .Validate(request)
Log: add old usage var result = validator ?.Validate(request);
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage var result = validator ?.Validate(request);
Log: add old usage .Validate(request)
Log: add old usage var result = validator ?.Validate(request);
Log: add old usage .Validate(request)
Log: add old usage var result = validator ?.Validate(request);
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: add old usage .Validate(request)
Log: ============== Cluster start ==============
- return Validate(context.ToGeneric<T>());
----------------
+ return Validate(ValidationContext<T>.GetFromNonGenericContext(context));

============= Cluster end ==============

Log: ============== Cluster start ==============
Validate(context.ToGeneric < T >())
----------------
Validate(ValidationContext < T >.GetFromNonGenericContext(context))

old usages: validator.Validate(new ValidationContext(model))
old usages: validator.Validate(new ValidationContext(model))
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
============= Cluster end ==============

Log: Input to synthesize the program:
Log: Validate(context.ToGeneric < T >())
Log: ---------------------
Log: Validate(ValidationContext < T >.GetFromNonGenericContext(context))
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: ============== Cluster start ==============
- typeof(InvalidOperationException).ShouldBeThrownBy(() =>
				nonGenericValidator.Validate("foo"));
----------------
+ typeof(InvalidOperationException).ShouldBeThrownBy(() =>
				nonGenericValidator.Validate(new ValidationContext<string>("foo")));

============= Cluster end ==============

Log: ============== Cluster start ==============
nonGenericValidator.Validate("foo")
----------------
nonGenericValidator.Validate(new ValidationContext < string >("foo"))

new usages: validator.Validate(new ValidationContext < T >(model))
new usages: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
new usages: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
new usages: validatable.Validate(new ValidationContext(validatingObject))
new usages: validator.Validate(new ValidationContext < object >(model))
new usages: .Validate(new ValidationContext < IEvent >(@event))
new usages: .Validate(new ValidationContext < TRequest >(request))
old usages: validator.Validate(new ValidationContext(model))
old usages: validator.Validate(new ValidationContext(model))
============= Cluster end ==============

Log: generalized output is: nonGenericValidator.Validate(new ValidationContext < string >("foo"))
Interesting new usage: validator.Validate(new ValidationContext < T >(model))
Log: Subsititution: ("foo"):ArgumentList -> (model):ArgumentList
Log: Subsititution: string:PredefinedType -> T:IdentifierName
Log: Subsititution: nonGenericValidator:IdentifierName -> validator:IdentifierName
Correponding input: validator.Validate(model)
Interesting new usage: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: Subsititution: ("foo"):ArgumentList -> (this):ArgumentList
Log: Subsititution: string:PredefinedType -> TextBoxDialogViewModel:IdentifierName
Log: Subsititution: nonGenericValidator:IdentifierName -> Validator:IdentifierName
Correponding input: Validator.Validate(this)
Interesting new usage: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: Subsititution: ("foo"):ArgumentList -> (target):ArgumentList
Log: Subsititution: string:PredefinedType -> RxPropertyChanged:IdentifierName
Log: Subsititution: nonGenericValidator:IdentifierName -> validator:IdentifierName
Correponding input: validator.Validate(target)
Interesting new usage: validatable.Validate(new ValidationContext(validatingObject))
Log: Subsititution: ("foo"):ArgumentList -> (validatingObject):ArgumentList
Log: Subsititution: ValidationContext < string >:GenericName -> ValidationContext:IdentifierName
Log: Subsititution: nonGenericValidator:IdentifierName -> validatable:IdentifierName
Correponding input: validatable.Validate(validatingObject)
Interesting new usage: validator.Validate(new ValidationContext < object >(model))
Log: Subsititution: ("foo"):ArgumentList -> (model):ArgumentList
Log: Subsititution: string:StringKeyword -> object:ObjectKeyword
Log: Subsititution: nonGenericValidator:IdentifierName -> validator:IdentifierName
Correponding input: validator.Validate(model)
Interesting new usage: .Validate(new ValidationContext < IEvent >(@event))
Log: Subsititution: ("foo"):ArgumentList -> (@event):ArgumentList
Log: Subsititution: string:PredefinedType -> IEvent:IdentifierName
Log: Subsititution: nonGenericValidator.Validate:SimpleMemberAccessExpression -> .Validate:MemberBindingExpression
Correponding input: .Validate(@event)
Interesting new usage: .Validate(new ValidationContext < TRequest >(request))
Log: Subsititution: ("foo"):ArgumentList -> (request):ArgumentList
Log: Subsititution: string:PredefinedType -> TRequest:IdentifierName
Log: Subsititution: nonGenericValidator.Validate:SimpleMemberAccessExpression -> .Validate:MemberBindingExpression
Correponding input: .Validate(request)
Log: Input to synthesize the program:
Log: validator.Validate(model)
Log: ---------------------
Log: validator.Validate(new ValidationContext < T >(model))
Log: Validator.Validate(this)
Log: ---------------------
Log: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: validator.Validate(target)
Log: ---------------------
Log: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: validatable.Validate(validatingObject)
Log: ---------------------
Log: validatable.Validate(new ValidationContext(validatingObject))
Log: .Validate(@event)
Log: ---------------------
Log: .Validate(new ValidationContext < IEvent >(@event))
Log: .Validate(request)
Log: ---------------------
Log: .Validate(new ValidationContext < TRequest >(request))
Log: nonGenericValidator.Validate("foo")
Log: ---------------------
Log: nonGenericValidator.Validate(new ValidationContext < string >("foo"))
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is validator.Validate(new ValidationContext(new ValidationContext < T >(model)))
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is validator.Validate(new ValidationContext(new ValidationContext < T >(model)))
Log: ============== Cluster start ==============
- var result = validator.Validate(new Person { DateOfBirth = default(DateTime) });
----------------
+ var result = validator.Validate(new Person { DateOfBirth = default });

old usages: var result = validator.Validate(new ValidationContext(model));
old usages: var result = validator ?.Validate(request);
old usages: var result = validator ?.Validate(request);
============= Cluster end ==============

Log: Input to synthesize the program:
Log: var result = validator.Validate(new Person { DateOfBirth = default(DateTime) });
Log: ---------------------
Log: var result = validator.Validate(new Person { DateOfBirth = default });
Log: old usage is var result = validator.Validate(new ValidationContext(model));
Log: predict is null
Log: old usage is var result = validator ?.Validate(request);
Log: predict is null
Log: old usage is var result = validator ?.Validate(request);
Log: predict is null
Log: ============== Cluster start ==============
validator.Validate(new Person { DateOfBirth = default(DateTime) })
----------------
validator.Validate(new Person { DateOfBirth = default })

new usages: validator.Validate(new ValidationContext < T >(model))
new usages: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
new usages: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
new usages: validatable.Validate(new ValidationContext(validatingObject))
new usages: validator.Validate(new ValidationContext < object >(model))
old usages: validator.Validate(new ValidationContext(model))
old usages: validator.Validate(new ValidationContext(model))
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
============= Cluster end ==============

Log: generalized output is: validator.Validate(new Person { DateOfBirth = default })
Interesting new usage: validator.Validate(new ValidationContext < T >(model))
Log: Subsititution: { DateOfBirth = default }:ObjectInitializerExpression -> (model):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < T >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < T >:GenericName
Correponding input: validator.Validate(new ValidationContext < T > { DateOfBirth = default(DateTime) })
Interesting new usage: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: Subsititution: { DateOfBirth = default }:ObjectInitializerExpression -> (this):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < TextBoxDialogViewModel >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> Validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < TextBoxDialogViewModel >:GenericName
Correponding input: Validator.Validate(new ValidationContext < TextBoxDialogViewModel > { DateOfBirth = default(DateTime) })
Interesting new usage: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: Subsititution: { DateOfBirth = default }:ObjectInitializerExpression -> (target):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < RxPropertyChanged >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < RxPropertyChanged >:GenericName
Correponding input: validator.Validate(new ValidationContext < RxPropertyChanged > { DateOfBirth = default(DateTime) })
Interesting new usage: validatable.Validate(new ValidationContext(validatingObject))
Log: Subsititution: { DateOfBirth = default }:ObjectInitializerExpression -> (validatingObject):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext:IdentifierName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validatable:IdentifierName
Correponding input: validatable.Validate(new ValidationContext { DateOfBirth = default(DateTime) })
Interesting new usage: validator.Validate(new ValidationContext < object >(model))
Log: Subsititution: { DateOfBirth = default }:ObjectInitializerExpression -> (model):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < object >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < object >:GenericName
Correponding input: validator.Validate(new ValidationContext < object > { DateOfBirth = default(DateTime) })
Log: Input to synthesize the program:
Log: validator.Validate(new ValidationContext < T > { DateOfBirth = default(DateTime) })
Log: ---------------------
Log: validator.Validate(new ValidationContext < T >(model))
Log: Validator.Validate(new ValidationContext < TextBoxDialogViewModel > { DateOfBirth = default(DateTime) })
Log: ---------------------
Log: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: validator.Validate(new ValidationContext < RxPropertyChanged > { DateOfBirth = default(DateTime) })
Log: ---------------------
Log: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: validatable.Validate(new ValidationContext { DateOfBirth = default(DateTime) })
Log: ---------------------
Log: validatable.Validate(new ValidationContext(validatingObject))
Log: validator.Validate(new ValidationContext < object > { DateOfBirth = default(DateTime) })
Log: ---------------------
Log: validator.Validate(new ValidationContext < object >(model))
Log: validator.Validate(new Person { DateOfBirth = default(DateTime) })
Log: ---------------------
Log: validator.Validate(new Person { DateOfBirth = default })
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: ============== Cluster start ==============
var result = validator.Validate(new Person { Surname = "foo", Forename = "foo" });
----------------
var result = validator.Validate(new Person { Surname = "foo", Forename = "bar" });

old usages: var result = validator.Validate(new ValidationContext(model));
old usages: var result = validator ?.Validate(request);
old usages: var result = validator ?.Validate(request);
============= Cluster end ==============

Log: Input to synthesize the program:
Log: var result = validator.Validate(new Person { Surname = "foo", Forename = "foo" });
Log: ---------------------
Log: var result = validator.Validate(new Person { Surname = "foo", Forename = "bar" });
Log: old usage is var result = validator.Validate(new ValidationContext(model));
Log: predict is null
Log: old usage is var result = validator ?.Validate(request);
Log: predict is null
Log: old usage is var result = validator ?.Validate(request);
Log: predict is null
Log: ============== Cluster start ==============
validator.Validate(new Person { Surname = "foo", Forename = "foo" })
----------------
validator.Validate(new Person { Surname = "foo", Forename = "bar" })

new usages: validator.Validate(new ValidationContext < T >(model))
new usages: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
new usages: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
new usages: validatable.Validate(new ValidationContext(validatingObject))
new usages: validator.Validate(new ValidationContext < object >(model))
old usages: validator.Validate(new ValidationContext(model))
old usages: validator.Validate(new ValidationContext(model))
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
============= Cluster end ==============

Log: generalized output is: validator.Validate(new Person { Surname = "foo", Forename = "bar" })
Interesting new usage: validator.Validate(new ValidationContext < T >(model))
Log: Subsititution: { Surname = "foo", Forename = "bar" }:ObjectInitializerExpression -> (model):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < T >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < T >:GenericName
Correponding input: validator.Validate(new ValidationContext < T > { Surname = "foo", Forename = "foo" })
Interesting new usage: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: Subsititution: { Surname = "foo", Forename = "bar" }:ObjectInitializerExpression -> (this):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < TextBoxDialogViewModel >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> Validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < TextBoxDialogViewModel >:GenericName
Correponding input: Validator.Validate(new ValidationContext < TextBoxDialogViewModel > { Surname = "foo", Forename = "foo" })
Interesting new usage: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: Subsititution: { Surname = "foo", Forename = "bar" }:ObjectInitializerExpression -> (target):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < RxPropertyChanged >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < RxPropertyChanged >:GenericName
Correponding input: validator.Validate(new ValidationContext < RxPropertyChanged > { Surname = "foo", Forename = "foo" })
Interesting new usage: validatable.Validate(new ValidationContext(validatingObject))
Log: Subsititution: { Surname = "foo", Forename = "bar" }:ObjectInitializerExpression -> (validatingObject):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext:IdentifierName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validatable:IdentifierName
Correponding input: validatable.Validate(new ValidationContext { Surname = "foo", Forename = "foo" })
Interesting new usage: validator.Validate(new ValidationContext < object >(model))
Log: Subsititution: { Surname = "foo", Forename = "bar" }:ObjectInitializerExpression -> (model):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < object >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < object >:GenericName
Correponding input: validator.Validate(new ValidationContext < object > { Surname = "foo", Forename = "foo" })
Log: Input to synthesize the program:
Log: validator.Validate(new ValidationContext < T > { Surname = "foo", Forename = "foo" })
Log: ---------------------
Log: validator.Validate(new ValidationContext < T >(model))
Log: Validator.Validate(new ValidationContext < TextBoxDialogViewModel > { Surname = "foo", Forename = "foo" })
Log: ---------------------
Log: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: validator.Validate(new ValidationContext < RxPropertyChanged > { Surname = "foo", Forename = "foo" })
Log: ---------------------
Log: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: validatable.Validate(new ValidationContext { Surname = "foo", Forename = "foo" })
Log: ---------------------
Log: validatable.Validate(new ValidationContext(validatingObject))
Log: validator.Validate(new ValidationContext < object > { Surname = "foo", Forename = "foo" })
Log: ---------------------
Log: validator.Validate(new ValidationContext < object >(model))
Log: validator.Validate(new Person { Surname = "foo", Forename = "foo" })
Log: ---------------------
Log: validator.Validate(new Person { Surname = "foo", Forename = "bar" })
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: ============== Cluster start ==============
var result = validator.Validate(new Person { Discount = 123.456778m });
----------------
var result = validator.Validate(new Person { Discount = 12.34M });

old usages: var result = validator.Validate(new ValidationContext(model));
old usages: var result = validator ?.Validate(request);
old usages: var result = validator ?.Validate(request);
============= Cluster end ==============

Log: Input to synthesize the program:
Log: var result = validator.Validate(new Person { Discount = 123.456778m });
Log: ---------------------
Log: var result = validator.Validate(new Person { Discount = 12.34M });
Log: old usage is var result = validator.Validate(new ValidationContext(model));
Log: predict is null
Log: old usage is var result = validator ?.Validate(request);
Log: predict is null
Log: old usage is var result = validator ?.Validate(request);
Log: predict is null
Log: ============== Cluster start ==============
validator.Validate(new Person { Discount = 123.456778m })
----------------
validator.Validate(new Person { Discount = 12.34M })

new usages: validator.Validate(new ValidationContext < T >(model))
new usages: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
new usages: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
new usages: validatable.Validate(new ValidationContext(validatingObject))
new usages: validator.Validate(new ValidationContext < object >(model))
old usages: validator.Validate(new ValidationContext(model))
old usages: validator.Validate(new ValidationContext(model))
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
============= Cluster end ==============

Log: generalized output is: validator.Validate(new Person { Discount = 12.34M })
Interesting new usage: validator.Validate(new ValidationContext < T >(model))
Log: Subsititution: { Discount = 12.34M }:ObjectInitializerExpression -> (model):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < T >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < T >:GenericName
Correponding input: validator.Validate(new ValidationContext < T > { Discount = 123.456778m })
Interesting new usage: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: Subsititution: { Discount = 12.34M }:ObjectInitializerExpression -> (this):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < TextBoxDialogViewModel >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> Validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < TextBoxDialogViewModel >:GenericName
Correponding input: Validator.Validate(new ValidationContext < TextBoxDialogViewModel > { Discount = 123.456778m })
Interesting new usage: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: Subsititution: { Discount = 12.34M }:ObjectInitializerExpression -> (target):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < RxPropertyChanged >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < RxPropertyChanged >:GenericName
Correponding input: validator.Validate(new ValidationContext < RxPropertyChanged > { Discount = 123.456778m })
Interesting new usage: validatable.Validate(new ValidationContext(validatingObject))
Log: Subsititution: { Discount = 12.34M }:ObjectInitializerExpression -> (validatingObject):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext:IdentifierName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validatable:IdentifierName
Correponding input: validatable.Validate(new ValidationContext { Discount = 123.456778m })
Interesting new usage: validator.Validate(new ValidationContext < object >(model))
Log: Subsititution: { Discount = 12.34M }:ObjectInitializerExpression -> (model):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < object >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < object >:GenericName
Correponding input: validator.Validate(new ValidationContext < object > { Discount = 123.456778m })
Log: Input to synthesize the program:
Log: validator.Validate(new ValidationContext < T > { Discount = 123.456778m })
Log: ---------------------
Log: validator.Validate(new ValidationContext < T >(model))
Log: Validator.Validate(new ValidationContext < TextBoxDialogViewModel > { Discount = 123.456778m })
Log: ---------------------
Log: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: validator.Validate(new ValidationContext < RxPropertyChanged > { Discount = 123.456778m })
Log: ---------------------
Log: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: validatable.Validate(new ValidationContext { Discount = 123.456778m })
Log: ---------------------
Log: validatable.Validate(new ValidationContext(validatingObject))
Log: validator.Validate(new ValidationContext < object > { Discount = 123.456778m })
Log: ---------------------
Log: validator.Validate(new ValidationContext < object >(model))
Log: validator.Validate(new Person { Discount = 123.456778m })
Log: ---------------------
Log: validator.Validate(new Person { Discount = 12.34M })
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: ============== Cluster start ==============
- result = validator.Validate(new Person {Discount = 1565.0M});
- result.IsValid.ShouldBeFalse();
- validator = new TestValidator(v => 
                v.RuleFor(x => x.Discount)
                    .SetValidator(new ScalePrecisionValidator(2, 4) {IgnoreTrailingZeros = true}));
- result = validator.Validate(new Person {Discount = 1565.0M});
----------------
+ result = validator.Validate(new Person { Discount = 2.34M });

============= Cluster end ==============

Log: ============== Cluster start ==============
validator.Validate(new Person { Discount = 1565.0M })
----------------
validator.Validate(new Person { Discount = 2.34M })

new usages: validator.Validate(new ValidationContext < T >(model))
new usages: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
new usages: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
new usages: validatable.Validate(new ValidationContext(validatingObject))
new usages: validator.Validate(new ValidationContext < object >(model))
old usages: validator.Validate(new ValidationContext(model))
old usages: validator.Validate(new ValidationContext(model))
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
============= Cluster end ==============

Log: generalized output is: validator.Validate(new Person { Discount = 2.34M })
Interesting new usage: validator.Validate(new ValidationContext < T >(model))
Log: Subsititution: { Discount = 2.34M }:ObjectInitializerExpression -> (model):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < T >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < T >:GenericName
Correponding input: validator.Validate(new ValidationContext < T > { Discount = 1565.0M })
Interesting new usage: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: Subsititution: { Discount = 2.34M }:ObjectInitializerExpression -> (this):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < TextBoxDialogViewModel >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> Validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < TextBoxDialogViewModel >:GenericName
Correponding input: Validator.Validate(new ValidationContext < TextBoxDialogViewModel > { Discount = 1565.0M })
Interesting new usage: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: Subsititution: { Discount = 2.34M }:ObjectInitializerExpression -> (target):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < RxPropertyChanged >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < RxPropertyChanged >:GenericName
Correponding input: validator.Validate(new ValidationContext < RxPropertyChanged > { Discount = 1565.0M })
Interesting new usage: validatable.Validate(new ValidationContext(validatingObject))
Log: Subsititution: { Discount = 2.34M }:ObjectInitializerExpression -> (validatingObject):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext:IdentifierName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validatable:IdentifierName
Correponding input: validatable.Validate(new ValidationContext { Discount = 1565.0M })
Interesting new usage: validator.Validate(new ValidationContext < object >(model))
Log: Subsititution: { Discount = 2.34M }:ObjectInitializerExpression -> (model):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < object >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < object >:GenericName
Correponding input: validator.Validate(new ValidationContext < object > { Discount = 1565.0M })
Log: Input to synthesize the program:
Log: validator.Validate(new ValidationContext < T > { Discount = 1565.0M })
Log: ---------------------
Log: validator.Validate(new ValidationContext < T >(model))
Log: Validator.Validate(new ValidationContext < TextBoxDialogViewModel > { Discount = 1565.0M })
Log: ---------------------
Log: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: validator.Validate(new ValidationContext < RxPropertyChanged > { Discount = 1565.0M })
Log: ---------------------
Log: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: validatable.Validate(new ValidationContext { Discount = 1565.0M })
Log: ---------------------
Log: validatable.Validate(new ValidationContext(validatingObject))
Log: validator.Validate(new ValidationContext < object > { Discount = 1565.0M })
Log: ---------------------
Log: validator.Validate(new ValidationContext < object >(model))
Log: validator.Validate(new Person { Discount = 1565.0M })
Log: ---------------------
Log: validator.Validate(new Person { Discount = 2.34M })
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: ============== Cluster start ==============
- result = validator.Validate(new Person {Discount = 15655.0M});
- result.IsValid.ShouldBeFalse();
- result = validator.Validate(new Person {Discount = 155.0000000000000000000000000M});
----------------
+ result = validator.Validate(new Person { Discount = -2.34M });

============= Cluster end ==============

Log: ============== Cluster start ==============
validator.Validate(new Person { Discount = 15655.0M })
----------------
validator.Validate(new Person { Discount = -2.34M })

new usages: validator.Validate(new ValidationContext < T >(model))
new usages: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
new usages: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
new usages: validatable.Validate(new ValidationContext(validatingObject))
new usages: validator.Validate(new ValidationContext < object >(model))
old usages: validator.Validate(new ValidationContext(model))
old usages: validator.Validate(new ValidationContext(model))
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
============= Cluster end ==============

Log: generalized output is: validator.Validate(new Person { Discount = -2.34M })
Interesting new usage: validator.Validate(new ValidationContext < T >(model))
Log: Subsititution: { Discount = -2.34M }:ObjectInitializerExpression -> (model):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < T >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < T >:GenericName
Correponding input: validator.Validate(new ValidationContext < T > { Discount = 15655.0M })
Interesting new usage: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: Subsititution: { Discount = -2.34M }:ObjectInitializerExpression -> (this):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < TextBoxDialogViewModel >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> Validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < TextBoxDialogViewModel >:GenericName
Correponding input: Validator.Validate(new ValidationContext < TextBoxDialogViewModel > { Discount = 15655.0M })
Interesting new usage: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: Subsititution: { Discount = -2.34M }:ObjectInitializerExpression -> (target):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < RxPropertyChanged >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < RxPropertyChanged >:GenericName
Correponding input: validator.Validate(new ValidationContext < RxPropertyChanged > { Discount = 15655.0M })
Interesting new usage: validatable.Validate(new ValidationContext(validatingObject))
Log: Subsititution: { Discount = -2.34M }:ObjectInitializerExpression -> (validatingObject):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext:IdentifierName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validatable:IdentifierName
Correponding input: validatable.Validate(new ValidationContext { Discount = 15655.0M })
Interesting new usage: validator.Validate(new ValidationContext < object >(model))
Log: Subsititution: { Discount = -2.34M }:ObjectInitializerExpression -> (model):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < object >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < object >:GenericName
Correponding input: validator.Validate(new ValidationContext < object > { Discount = 15655.0M })
Log: Input to synthesize the program:
Log: validator.Validate(new ValidationContext < T > { Discount = 15655.0M })
Log: ---------------------
Log: validator.Validate(new ValidationContext < T >(model))
Log: Validator.Validate(new ValidationContext < TextBoxDialogViewModel > { Discount = 15655.0M })
Log: ---------------------
Log: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: validator.Validate(new ValidationContext < RxPropertyChanged > { Discount = 15655.0M })
Log: ---------------------
Log: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: validatable.Validate(new ValidationContext { Discount = 15655.0M })
Log: ---------------------
Log: validatable.Validate(new ValidationContext(validatingObject))
Log: validator.Validate(new ValidationContext < object > { Discount = 15655.0M })
Log: ---------------------
Log: validator.Validate(new ValidationContext < object >(model))
Log: validator.Validate(new Person { Discount = 15655.0M })
Log: ---------------------
Log: validator.Validate(new Person { Discount = -2.34M })
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: ============== Cluster start ==============
- result = validator.Validate(new Person {Discount = 155.0000000000000000000000001M});
- result.IsValid.ShouldBeFalse();
- result = validator.Validate(new Person {Discount = 00000000000000000000155.0000000000000000000000000M});
----------------
+ result = validator.Validate(new Person { Discount = 0.34M });

============= Cluster end ==============

Log: ============== Cluster start ==============
validator.Validate(new Person { Discount = 155.0000000000000000000000001M })
----------------
validator.Validate(new Person { Discount = 0.34M })

new usages: validator.Validate(new ValidationContext < T >(model))
new usages: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
new usages: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
new usages: validatable.Validate(new ValidationContext(validatingObject))
new usages: validator.Validate(new ValidationContext < object >(model))
old usages: validator.Validate(new ValidationContext(model))
old usages: validator.Validate(new ValidationContext(model))
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
old usages: .Validate(request)
============= Cluster end ==============

Log: generalized output is: validator.Validate(new Person { Discount = 0.34M })
Interesting new usage: validator.Validate(new ValidationContext < T >(model))
Log: Subsititution: { Discount = 0.34M }:ObjectInitializerExpression -> (model):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < T >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < T >:GenericName
Correponding input: validator.Validate(new ValidationContext < T > { Discount = 155.0000000000000000000000001M })
Interesting new usage: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: Subsititution: { Discount = 0.34M }:ObjectInitializerExpression -> (this):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < TextBoxDialogViewModel >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> Validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < TextBoxDialogViewModel >:GenericName
Correponding input: Validator.Validate(new ValidationContext < TextBoxDialogViewModel > { Discount = 155.0000000000000000000000001M })
Interesting new usage: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: Subsititution: { Discount = 0.34M }:ObjectInitializerExpression -> (target):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < RxPropertyChanged >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < RxPropertyChanged >:GenericName
Correponding input: validator.Validate(new ValidationContext < RxPropertyChanged > { Discount = 155.0000000000000000000000001M })
Interesting new usage: validatable.Validate(new ValidationContext(validatingObject))
Log: Subsititution: { Discount = 0.34M }:ObjectInitializerExpression -> (validatingObject):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext:IdentifierName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validatable:IdentifierName
Correponding input: validatable.Validate(new ValidationContext { Discount = 155.0000000000000000000000001M })
Interesting new usage: validator.Validate(new ValidationContext < object >(model))
Log: Subsititution: { Discount = 0.34M }:ObjectInitializerExpression -> (model):ArgumentList
Log: Subsititution: Person:IdentifierName -> ValidationContext < object >:GenericName
Log: Subsititution: new:NewKeyword -> new:NewKeyword
Log: Subsititution: validator:IdentifierName -> validator:IdentifierName
Log: Subsititution: Person:IdentifierName -> ValidationContext < object >:GenericName
Correponding input: validator.Validate(new ValidationContext < object > { Discount = 155.0000000000000000000000001M })
Log: Input to synthesize the program:
Log: validator.Validate(new ValidationContext < T > { Discount = 155.0000000000000000000000001M })
Log: ---------------------
Log: validator.Validate(new ValidationContext < T >(model))
Log: Validator.Validate(new ValidationContext < TextBoxDialogViewModel > { Discount = 155.0000000000000000000000001M })
Log: ---------------------
Log: Validator.Validate(new ValidationContext < TextBoxDialogViewModel >(this))
Log: validator.Validate(new ValidationContext < RxPropertyChanged > { Discount = 155.0000000000000000000000001M })
Log: ---------------------
Log: validator.Validate(new ValidationContext < RxPropertyChanged >(target))
Log: validatable.Validate(new ValidationContext { Discount = 155.0000000000000000000000001M })
Log: ---------------------
Log: validatable.Validate(new ValidationContext(validatingObject))
Log: validator.Validate(new ValidationContext < object > { Discount = 155.0000000000000000000000001M })
Log: ---------------------
Log: validator.Validate(new ValidationContext < object >(model))
Log: validator.Validate(new Person { Discount = 155.0000000000000000000000001M })
Log: ---------------------
Log: validator.Validate(new Person { Discount = 0.34M })
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is validator.Validate(new ValidationContext(model))
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: old usage is .Validate(request)
Log: predict is null
Log: ============== Cluster start ==============
- return validator.Validate(newContext).Errors;
----------------
+ HandleCollectionIndex(context, out object originalIndex, out object currentIndex);
+ var results = validator.Validate(newContext).Errors;
+ ResetCollectionIndex(context, originalIndex, currentIndex);
+ return results;

============= Cluster end ==============

total correct cases : 0 totalTestCases 0 Successful rate is 0
The successful rate for transforming old usages: 2 / 6
