Configuration: 
---- UseAdditionalOutput: False
---- UseAdditionalInput : False
---- OnlyNewUsage       : False
---- GivenExample       : 1
---- UseTypedUsage      : True
---- NewKeyWords        : 
---- OldKeyWords        : 
---- OldUsageThreashold : 0.2
---- NewUsageThreashold : 0.25
load 3 relevant edits!
load 82 old relevant usages
Log: invoke synthesis engine...
Log: the size of unRolledEdits is: 3
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
Log: add old usage Handle(notification)
TestSubject.Handle(new AddMessageRequest { Text = "Hello", UserId = user.Id })
Handle(request)
Abstracted TestSubject.Handle()
TestSubject.Handle() : InvocationExpression : 
TestSubject.Handle : SimpleMemberAccessExpression : InvocationExpression
TestSubject : IdentifierName : SimpleMemberAccessExpression
TestSubject : IdentifierToken : IdentifierName
. : DotToken : SimpleMemberAccessExpression
Handle : IdentifierName : SimpleMemberAccessExpression
Handle : IdentifierToken : IdentifierName
() : ArgumentList : InvocationExpression
( : OpenParenToken : ArgumentList
 : Argument : ArgumentList
) : CloseParenToken : ArgumentList
Abstracted Handle()
Handle() : InvocationExpression : 
Handle : IdentifierName : InvocationExpression
Handle : IdentifierToken : IdentifierName
() : ArgumentList : InvocationExpression
( : OpenParenToken : ArgumentList
 : Argument : ArgumentList
) : CloseParenToken : ArgumentList
Dis: 0.16666669

Log: add old usage TestSubject.Handle(new AddMessageRequest { Text = "Hello", UserId = user.Id })
Log: add old usage TestSubject.Handle(new GetMessagesRequest { WishListId = firstWishList.Id })
Log: add old usage TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = user.Id })
Log: add old usage TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = otherUser.Id })
Log: add old usage TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = bob.Id })
Log: add old usage TestSubject.Handle(new GetMyListRequest { UserId = user.Id })
Log: add old usage TestSubject.Handle(new GetMyListRequest { UserId = user.Id })
Log: add old usage TestSubject.Handle(new GetSharedListRequest { WishListId = bob.WishList.Id, UserId = james.Id })
TestSubject.Handle(new AddMessageRequest { Text = "Hello", UserId = user.Id })
Handle(request)
Abstracted TestSubject.Handle()
TestSubject.Handle() : InvocationExpression : 
TestSubject.Handle : SimpleMemberAccessExpression : InvocationExpression
TestSubject : IdentifierName : SimpleMemberAccessExpression
TestSubject : IdentifierToken : IdentifierName
. : DotToken : SimpleMemberAccessExpression
Handle : IdentifierName : SimpleMemberAccessExpression
Handle : IdentifierToken : IdentifierName
() : ArgumentList : InvocationExpression
( : OpenParenToken : ArgumentList
 : Argument : ArgumentList
) : CloseParenToken : ArgumentList
Abstracted Handle()
Handle() : InvocationExpression : 
Handle : IdentifierName : InvocationExpression
Handle : IdentifierToken : IdentifierName
() : ArgumentList : InvocationExpression
( : OpenParenToken : ArgumentList
 : Argument : ArgumentList
) : CloseParenToken : ArgumentList
Dis: 0.16666669

Log: add old usage TestSubject.Handle(new AddMessageRequest { Text = "Hello", UserId = user.Id })
Log: add old usage TestSubject.Handle(new GetMessagesRequest { WishListId = firstWishList.Id })
Log: add old usage TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = user.Id })
Log: add old usage TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = otherUser.Id })
Log: add old usage TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = bob.Id })
Log: add old usage TestSubject.Handle(new GetMyListRequest { UserId = user.Id })
Log: add old usage TestSubject.Handle(new GetSharedListRequest { WishListId = bob.WishList.Id, UserId = james.Id })
TestSubject.Handle(new AddMessageRequest { Text = "Hello", UserId = user.Id })
Handle(request)
Abstracted TestSubject.Handle()
TestSubject.Handle() : InvocationExpression : 
TestSubject.Handle : SimpleMemberAccessExpression : InvocationExpression
TestSubject : IdentifierName : SimpleMemberAccessExpression
TestSubject : IdentifierToken : IdentifierName
. : DotToken : SimpleMemberAccessExpression
Handle : IdentifierName : SimpleMemberAccessExpression
Handle : IdentifierToken : IdentifierName
() : ArgumentList : InvocationExpression
( : OpenParenToken : ArgumentList
 : Argument : ArgumentList
) : CloseParenToken : ArgumentList
Abstracted Handle()
Handle() : InvocationExpression : 
Handle : IdentifierName : InvocationExpression
Handle : IdentifierToken : IdentifierName
() : ArgumentList : InvocationExpression
( : OpenParenToken : ArgumentList
 : Argument : ArgumentList
) : CloseParenToken : ArgumentList
Dis: 0.16666669

Log: add old usage TestSubject.Handle(new AddMessageRequest { Text = "Hello", UserId = user.Id })
Log: add old usage TestSubject.Handle(new GetMessagesRequest { WishListId = firstWishList.Id })
Log: add old usage TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = user.Id })
Log: add old usage TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = otherUser.Id })
Log: add old usage TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = bob.Id })
Log: add old usage TestSubject.Handle(new GetMyListRequest { UserId = user.Id })
Log: add old usage TestSubject.Handle(new GetSharedListRequest { WishListId = bob.WishList.Id, UserId = james.Id })
Log: ============== Cluster start ==============
- var handlers = serviceFactory
                .GetInstances<INotificationHandler<TNotification>>()
                .Select(x => x.Handle((TNotification)notification, cancellationToken));
----------------
+ var handlers = serviceFactory
                .GetInstances<INotificationHandler<TNotification>>()
                .Select(x => new Func<Task>(() => x.Handle((TNotification)notification, cancellationToken)));

============= Cluster end ==============

Log: ============== Cluster start ==============
- await Handle(request).ConfigureAwait(false);
----------------
+ await Handle(request, cancellationToken).ConfigureAwait(false);

============= Cluster end ==============

Log: ============== Cluster start ==============
Handle(request)
----------------
Handle(request, cancellationToken)

old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: Handle(notification)
old usages: TestSubject.Handle(new AddMessageRequest { Text = "Hello", UserId = user.Id })
old usages: TestSubject.Handle(new GetMessagesRequest { WishListId = firstWishList.Id })
old usages: TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = user.Id })
old usages: TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = otherUser.Id })
old usages: TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = bob.Id })
old usages: TestSubject.Handle(new GetMyListRequest { UserId = user.Id })
old usages: TestSubject.Handle(new GetMyListRequest { UserId = user.Id })
old usages: TestSubject.Handle(new GetSharedListRequest { WishListId = bob.WishList.Id, UserId = james.Id })
old usages: TestSubject.Handle(new AddMessageRequest { Text = "Hello", UserId = user.Id })
old usages: TestSubject.Handle(new GetMessagesRequest { WishListId = firstWishList.Id })
old usages: TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = user.Id })
old usages: TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = otherUser.Id })
old usages: TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = bob.Id })
old usages: TestSubject.Handle(new GetMyListRequest { UserId = user.Id })
old usages: TestSubject.Handle(new GetSharedListRequest { WishListId = bob.WishList.Id, UserId = james.Id })
old usages: TestSubject.Handle(new AddMessageRequest { Text = "Hello", UserId = user.Id })
old usages: TestSubject.Handle(new GetMessagesRequest { WishListId = firstWishList.Id })
old usages: TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = user.Id })
old usages: TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = otherUser.Id })
old usages: TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = bob.Id })
old usages: TestSubject.Handle(new GetMyListRequest { UserId = user.Id })
old usages: TestSubject.Handle(new GetSharedListRequest { WishListId = bob.WishList.Id, UserId = james.Id })
============= Cluster end ==============

Log: Input to synthesize the program:
Log: Handle(request)
Log: ---------------------
Log: Handle(request, cancellationToken)
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is Handle(notification)
Log: predict is null
Log: old usage is TestSubject.Handle(new AddMessageRequest { Text = "Hello", UserId = user.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new GetMessagesRequest { WishListId = firstWishList.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = user.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = otherUser.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = bob.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new GetMyListRequest { UserId = user.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new GetMyListRequest { UserId = user.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new GetSharedListRequest { WishListId = bob.WishList.Id, UserId = james.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new AddMessageRequest { Text = "Hello", UserId = user.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new GetMessagesRequest { WishListId = firstWishList.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = user.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = otherUser.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = bob.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new GetMyListRequest { UserId = user.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new GetSharedListRequest { WishListId = bob.WishList.Id, UserId = james.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new AddMessageRequest { Text = "Hello", UserId = user.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new GetMessagesRequest { WishListId = firstWishList.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = user.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = otherUser.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new AcceptInvitationRequest(token) { UserId = bob.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new GetMyListRequest { UserId = user.Id })
Log: predict is null
Log: old usage is TestSubject.Handle(new GetSharedListRequest { WishListId = bob.WishList.Id, UserId = james.Id })
Log: predict is null
total correct cases : 0 totalTestCases 0 Successful rate is 0
The successful rate for transforming old usages: 0 / 56
